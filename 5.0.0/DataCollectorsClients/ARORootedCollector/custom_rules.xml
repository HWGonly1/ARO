<?xml version="1.0" encoding="UTF-8"?>
<project name="ARODataCollector_Custom" basedir="." >
	<property file="/opt/ant.properties" />
	<property name="dist.dir" value="dist" />
	<!-- Included the Android Manifest to fetch version number of application -->
	<xmlproperty file="AndroidManifest.xml" prefix="ARODataCollectorManifest" collapseAttributes="true" />
	<!-- This contains the key.store.password and key.alias properties on the pluto build server -->
	<property file="/opt/.android/signing.properties" />
	<xmlproperty file="AndroidManifest.xml" prefix="mymanifest" collapseAttributes="true" />
	
	<!--
		<property name="key.store.dir" value="${svn.rootdir}/Profiles/Client/Android" />
		<property name="key.store" value="${key.store.dir}/attservices.keystore" />
	-->
		<property name="key.store.dir" value="/opt/.android" />
		<property name="key.store" value="${key.store.dir}/longbow.keystore" />

	<property name="ARO" value="ARODataCollector" />

	
	<target name="-pre-build">
	    <mkdir dir="${dist.dir}" />
	</target>
	<target name="cleanall" depends="clean">
	    <delete dir="${dist.dir}" failonerror="false" />
	</target>

	<target name="-post-build">
		<copy todir="${dist.dir}">
			<fileset dir="bin">
			    <include name="*.apk" />
			</fileset>
		</copy>    
	</target>
	
	<!-- Package the Open Source Build for DataCollector-->
	<target name="package"
	    description="Building open source package" >
	    <javadoc
	        classpath="${sdk.dir}/platforms/android-19/android.jar;./libs/FlurryAgent.jar"
	        destdir="docs/api"
	        linkoffline="http://d.android.com/reference ${sdk.dir}/docs/reference"
	        packagenames="com.att.android.*"
	        sourcepath="${source.dir};${gen.absolute.dir}"
	        use="true"
	        windowtitle="ARO API Documentation" >
	    </javadoc>

	    <zip destfile="${dist.dir}/${ARO}-build.zip">
	        <zipfileset 
	            file="${dist.dir}/ARODataCollector-debug.apk" 
	            fullpath="ARODataCollector_OpenSource_debug_v${mymanifest.manifest.android:versionName}.apk" />
	        <zipfileset
	            dir="${source.dir}"
	            prefix="${ARO}/src" />
	        <zipfileset
	            dir="${resource.absolute.dir}"
	            prefix="${ARO}/res" />
	        <zipfileset
	            dir="docs"
	            prefix="${ARO}/docs" />
	        <zipfileset
	            dir="libs"
	            prefix="${ARO}/libs" />
	        <zipfileset
	            dir="external/tcpdump_Source"
	            prefix="${ARO}/external" />
	        <zipfileset
	            file="AndroidManifest.xml"
	            prefix="${ARO}" />
	    </zip>
	</target>
	
	<!-- Copies branded resource files for ATT Branded Collector APK -->
	<target name="copybrandedresources" >
	    <copy
	        overwrite="true"
	        todir="res/layout" >
	        <fileset dir="brandedres/layout" />
	    </copy>
	    <copy
	        overwrite="true"
	        todir="res/raw" >
	        <fileset dir="brandedres/raw" />
	    </copy>
	    <copy
	        overwrite="true"
	        todir="res/values" >
	        <fileset dir="brandedres/values" />
	    </copy>
	</target>
	
<!-- Backs up Collector files for retaining Open Source Collector APK -->
	<target name="backupOpenSourcecollectorfiles" >
	    <copy
	        overwrite="true"
	        todir="temp/src" >
	        <fileset dir="src" />
	    </copy>
	    <copy
	        overwrite="true"
	        todir="temp/res/values" >
	        <fileset dir="res/values" />
	    </copy>
	    <copy
	        overwrite="true"
	        todir="temp/res/layout" >
	        <fileset dir="res/layout" />
	    </copy>
	    <copy
	        overwrite="true"
	        todir="temp/res/raw" >
	        <fileset dir="res/raw" />
	    </copy>
	</target>
	
<!-- Copies Secure Collector files for ATT Branded Secure Collector APK -->
	<target name="copysecurecollectorfiles" >
	    <copy
	        overwrite="true"
	        todir="src" >
	        <fileset dir="securecollectorfiles/src" />
	    </copy>
	    <copy
	        overwrite="true"
	        todir="assets" >
	        <fileset dir="securecollectorfiles/assets" />
	    </copy>
	    <copy
	        overwrite="true"
	        todir="res/values" >
	        <fileset dir="securecollectorfiles/values" />
	    </copy>
	    <copy
	        overwrite="true"
	        todir="res/layout" >
	        <fileset dir="securecollectorfiles/layout" />
	    </copy>
	    <copy
	        overwrite="true"
	        todir="res/raw" >
	        <fileset dir="securecollectorfiles/raw" />
	    </copy>	    
	</target>

<!-- Restores Collector files for retaining Open Source Collector APK -->
	<target name="restoreOpenSourcecollectorfiles" >
	    <copy
	        overwrite="true"
	        todir="src" >
	        <fileset dir="temp/src" />
	    </copy>
	    <copy
	        overwrite="true"
	        todir="res/values" >
	        <fileset dir="temp/res/values" />
	    </copy>
	    <copy
	        overwrite="true"
	        todir="res/layout" >
	        <fileset dir="temp/res/layout" />
	    </copy>
	    <copy
	        overwrite="true"
	        todir="res/raw" >
	        <fileset dir="temp/res/raw" />
	    </copy>
	</target>

<!-- Deletes temporary Collector files-->
	<target name="deletetempcecollectorfiles" >
		<delete dir="temp"/>
	</target>
	
	<!-- Builds AT&T Branded Secure Collector APK's-->
    <target name="SecureCollectorAPKCustomRules" >
        <property
            name="out.packaged.file"
            location="bin/AROSecureDataCollector-debug-unaligned.apk" />
        <property
            name="out.final.file"
            location="bin/AROSecureDataCollector-debug_v${mymanifest.manifest.android:versionName}.apk" />
    </target>
	<target name="debugSecureCollector" depends="SecureCollectorAPKCustomRules, android_rules.debug"/>
	
	<!-- Buils Collector builds in Sequence
	1. Open Source Zip File = APK + Source
	2. Branded Data Collector APK's (debug+release)
	3. Branded Secure Collector APK's (debug)
	-->
	
	<target name="fullBuild">
	    <antcall target="clean" />
	    <antcall target="debug" />
    	<antcall target="package" />
	    <antcall target="backupOpenSourcecollectorfiles" />
	    <antcall target="copybrandedresources" />
	    <antcall target="debug" />
	    <antcall target="clean" />
	    <antcall target="release">
	    	<param name="release.sign" value="true" />
	    </antcall>
	    <antcall target="clean" />
	    <antcall target="copysecurecollectorfiles" />
	    <antcall target="debugSecureCollector" />
	    <antcall target="clean" /> 
	    <antcall target="restoreOpenSourcecollectorfiles" />
	    <antcall target="deletetempcecollectorfiles" />
	</target>

	
</project>